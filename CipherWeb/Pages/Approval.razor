@page "/Approval"

@using System.Reflection

@inject ICipherInfo _db
@inject IJSRuntime JSRuntime
@inject ExcelService excelService
@inject DialogService DialogService

@code {
    TextStyle HeaderTextStyle = TextStyle.H5;
}

<PageTitle>אישור תנועות</PageTitle>

<CipherDataFilter_WithDataGrid Title="סינון תנועות לאישור" Cipher_TItem="Event" WithCustomDataGrid=true FilterFields="@FilterFields">
    <Buttons>
        <CipherButton Icon="@Icons.Symbols.V.DoneAll" HelpText="אישור כל התנועות" Variant="Variant.Outlined"></CipherButton>
        <CipherButton Icon="@Icons.Documents.Delete.DeleteSweep" HelpText="דחיית כל התנועות" Variant="Variant.Outlined"></CipherButton>
        <CipherExcelButton Data="@DataSource"></CipherExcelButton>
        <CipherPDFButton></CipherPDFButton>
    </Buttons>
    <CustomDataGrid>
        <CipherDataGrid @ref="CustomDataGrid" WithCustomColumns="true"
                        GridFilterMode="FilterMode.Simple" AllowFilter="false"
                        AllowSort="true" AllowGroup="false" HideGroupedColumn="true"
                        AllGroupsExpanded="false"
                        DataSource="@DataSource">
            <CustomColumns>
                <RadzenDataGridColumn TItem="Event" Title="אישור" Width="100px">
                    <Template>
                        <CipherButton ColorStyle="ButtonStyle.Success" Icon="@Icons.Symbols.V.Check"
                                      Variant="Variant.Flat" ColorShade="Shade.Default"
                                      Size="ButtonSize.Medium" />
                        <CipherButton ColorStyle="ButtonStyle.Danger" Icon="@Icons.Documents.Delete.Cancel"
                                      Variant="Variant.Flat" ColorShade="Shade.Default"
                                      Size="ButtonSize.Medium" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Event" Property="@(nameof(ev.EventType))" Title="@(ev.Translate(nameof(ev.EventType)))" />
                <RadzenDataGridColumn TItem="Event" Property="@(nameof(ev.ProcessId))" Title="@(ev.Translate(nameof(ev.ProcessId)))" />
                <RadzenDataGridColumn TItem="Event" Property="@(nameof(ev.Timestamp))" Title="@(ev.Translate(nameof(ev.Timestamp)))" />
                <RadzenDataGridColumn TItem="Event" Title="תעודה מוסרת">
                    <Template>
                        @if (context.Packages.ToList().Count() > 0)
                        {
                            @context.Packages.ToList().First().Id
                            ;
                        }
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="Event" Title="מערכת מוסרת">
                    <Template>
                        <RadzenText Text="A"></RadzenText>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Event" Title="תעודה מקבלת">
                    <Template>
                        @if (context.Packages.ToList().Count() > 0)
                        {
                            @context.Packages.ToList().Last().Id
                            ;
                        }
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Event" Title="מערכת מקבלת">
                    <Template>
                        <RadzenText Text="B"></RadzenText>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Event" Title="מסת תנועה">
                    <Template>
                        <RadzenText Text="5"></RadzenText>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Event" Property="@(nameof(ev.Comments))" Title="@(ev.Translate(nameof(ev.Comments)))" />
                <RadzenDataGridColumn TItem="Event" Property="@(nameof(ev.Valid))" Title="@(ev.Translate(nameof(ev.Valid)))">
                    <Template>
                        @((context.Valid) ? "מאומתת" : "לא מאומתת")
                    </Template>
                </RadzenDataGridColumn>
            </CustomColumns>
        </CipherDataGrid>
    </CustomDataGrid>
</CipherDataFilter_WithDataGrid>
<CipherButton Icon="@Icons.Documents.Edit.Save" Text="שמירת אישורים" Variant="Variant.Outlined" Width="100%"></CipherButton>

@code {
    IEnumerable<Event> DataSource { get; set; } = new List<Event>();

    RadzenDataGrid<Event> CustomDataGrid;

    private ErrorResponse error = ErrorResponse.Success;
    private Event ev = Event.Random();

    private List<Tuple<string, string>> FilterFields = new List<Tuple<string, string>>();

    protected override void OnInitialized()
    {
        (DataSource, error) = Event.All();

        FilterFields.AddRange(new List<Tuple<string, string>>()
        {
        new ("Timestamp", "תאריך תנועה"),
        new ("DonatingSystem", "מערכת מוסרת"),
        new ("AcceptingSystem", "מערכת מקבלת"),
        new ("DonatingPackage", "תעודה מוסרת"),
        new ("AcceptingPackage", "תעודה מקבלת"),
        new ("EventMass", "מסת תנועה"),
        });
        FilterFields.AddRange(Event.GetHebrewTranslations<Event>().ToList());
    }

    ButtonStyle GetStatusColor(string status)
    {
        return status switch
        {
            EventStatus.Pending => ButtonStyle.Secondary,
            EventStatus.Accepted => ButtonStyle.Success,
            EventStatus.Denied => ButtonStyle.Danger,
            EventStatus.Warning => ButtonStyle.Warning,
            _ => ButtonStyle.Primary
        };
    }

    public async Task OpenEvent()
    {
        await DialogService.OpenAsync("תנועה",

        ds =>
    @<CipherEventCard dir="rtl" WithCard=false ReadOnly=false></CipherEventCard>, Constants.SetDialogOptions);
    }
}