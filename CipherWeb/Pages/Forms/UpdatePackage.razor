@page "/Forms/UpdatePackage"

<PageTitle>@Title</PageTitle>

<CipherComponentCard Underline="true" WithCard="false" Title="@Title" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
    <CipherComponentCard Title="בחירת תעודה">
        <CipherPackageId @ref=OriginalPackage/>
    </CipherComponentCard>

    <CipherComponentCard Title="שינוי פרמטרים" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
        <CipherAutoComplete Label="מספר תעודה חדש" Icon="@Icons.Cipher.Package" @ref=newId Required="false"/>
        <CipherComments @ref="PackDescription" WithCard="false" Title="" Label="@Package.Translate(nameof(CachedData.PackageExample.Description))" 
        Icon="@Icons.Documents.Page.Description" Width="300px" />
        <CipherProcesses @ref="Destinations" Label="@Package.Translate(nameof(CachedData.PackageExample.DestinationProcesses))" />
    </CipherComponentCard>

    <CipherComponentCard Title="הערות עבור עדכון" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
        <CipherComments @ref="EventComments" Width="300px" WithCard="false" Title="" />
    </CipherComponentCard>

    @if (CheckJson)
    {
        <CipherComponentCard Title="בדיקה">
            <Buttons>
                <CipherButton Text="בדיקה" Click="Submit"></CipherButton>
            </Buttons>
            <ChildContent>
                <RadzenTextArea @bind-Value="JsonRequest" ReadOnly="true" Style="width: 100%; direction:ltr; height: 300px" />
            </ChildContent>
        </CipherComponentCard>
    }

    <CipherSubmit Click="Submit" Valid="@Valid" ErrorMessage="@ErrorMessage" @ref=submission />

</CipherComponentCard>

@code
{
    /// <summary>
    /// Is form valid for submission.
    /// </summary>
    [Parameter]
    public bool Valid { get; set; } = true;

    /// <summary>
    /// View the submitted json.
    /// </summary>
    [Parameter]
    public bool CheckJson { get; set; } = false;

    /// <summary>
    /// Page title.
    /// </summary>
    [Parameter]
    public string Title { get; set; } = "עדכון תעודה";

    /// <summary>
    /// Json request that will be sent to the API server.
    /// </summary>
    [Parameter]
    public string JsonRequest { get; set; }

    /// <summary>
    /// API event result to submission. Empty if the submission was unsuccessful.
    /// </summary>
    [Parameter]
    public Package Result { get; set; }

    /// <summary>
    /// API response to submission.
    /// </summary>
    [Parameter]
    public ErrorResponse Error { get; set; }

    /// <summary>
    /// Error message upon improper submission.
    /// </summary>
    [Parameter]
    public string ErrorMessage { get; set; }

    private CipherSubmit submission = new();
    private CipherComments PackDescription = new();
    private CipherPackageId OriginalPackage = new();
    private CipherAutoComplete newId = new();
    private CipherProcesses Destinations = new();
    private CipherComments EventComments = new();

    private CipherData.Models.UpdatePackage RequestedUpdate = CipherData.Models.UpdatePackage.Empty();

    private void Submit()
    {
        // initially, form is valid, there is no error, there is no data at all.
        string originalPackId = string.Empty;
        (Valid, ErrorMessage) = (true, string.Empty);
        JsonRequest = string.Empty;

        if (OriginalPackage.ChosenPackage is null)
        {
            (Valid, ErrorMessage) = (false, "נא לבחור בתעודה אותה רוצים לעדכן.");
        }
        else
        {
            originalPackId = ((Package)OriginalPackage.ChosenPackage).Id;

            if (newId.Check())
            {
                RequestedUpdate.PackageId = newId.Value;
                RequestedUpdate.DestinationProcessesIds = Destinations.ChosenProcesses.Select(x => x.Id).ToHashSet();
                RequestedUpdate.PackageDescription = PackDescription.Value();
                RequestedUpdate.ActionComments = EventComments.Value();

                (Valid, ErrorMessage) = RequestedUpdate.Check();

                if (Valid)
                {
                    JsonRequest = RequestedUpdate.ToJson();
                }
            }
            else
            {
                (Valid, ErrorMessage) = (false, "שגיאה במספר התעודה החדש");
            }
        }

        SendRequest(originalPackId);
    }

    /// <summary>
    /// Send request to API
    /// </summary>
    public void SendRequest(string originalPackId)
    {
        if (Valid)
        {
            (Result, Error) = PackagesRequests.UpdatePackage(originalPackId, RequestedUpdate);

            if (Error != ErrorResponse.Success)
            {
                submission.Valid = false;
                submission.ErrorMessage = Error.Message;
            }
            else
            {
                submission.Valid = true;
                submission.SuccessMessage = "תעודה עודכנה בהצלחה";
            }
        }
        else
        {
            submission.Valid = Valid;
            submission.ErrorMessage = ErrorMessage;
        }
    }
}
