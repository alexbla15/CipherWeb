@page "/Forms/UpdatePackage"

@inject ICipherInfo _db

<PageTitle>@Title</PageTitle>

<CipherComponentCard Underline="true" WithCard="false" Title="@Title" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
    <CipherComponentCard Title="בחירת תעודה">
        <CipherPackageId />
    </CipherComponentCard>

    <CipherComponentCard Title="שינוי פרמטרים" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
        <CipherCategoryDropDown />
        <CipherVesselDropDown />
        <CipherComments @ref="PackComments" WithCard="false" Title="" Placeholder="הערות תעודה" Width="300px"/>
    </CipherComponentCard>

    <CipherComments Title="הערות עבור עדכון"/>


    @if (CheckJson)
    {
        <CipherComponentCard Title="בדיקה">
            <Buttons>
                <CipherButton Text="בדיקה" Click="Submit"></CipherButton>
            </Buttons>
            <ChildContent>
                <RadzenTextArea @bind-Value="JsonRequest" ReadOnly="true" Style="width: 100%; direction:ltr; height: 300px" />
            </ChildContent>
        </CipherComponentCard>
    }

    <CipherSubmit Click="Submit" Valid="@Valid" ErrorMessage="@ErrorMessage" @ref=submission />

</CipherComponentCard>

@code
{
    /// <summary>
    /// Is form valid for submission.
    /// </summary>
    [Parameter]
    public bool Valid { get; set; } = true;

    /// <summary>
    /// View the submitted json.
    /// </summary>
    [Parameter]
    public bool CheckJson { get; set; } = true;

    /// <summary>
    /// Page title.
    /// </summary>
    [Parameter]
    public string Title { get; set; } = "עדכון תעודה";

    /// <summary>
    /// Json request that will be sent to the API server.
    /// </summary>
    [Parameter]
    public string JsonRequest { get; set; }

    /// <summary>
    /// API event result to submission. Empty if the submission was unsuccessful.
    /// </summary>
    [Parameter]
    public Event ResultEvent { get; set; }

    /// <summary>
    /// API response to submission.
    /// </summary>
    [Parameter]
    public ErrorResponse Error { get; set; }

    /// <summary>
    /// Error message upon improper submission.
    /// </summary>
    [Parameter]
    public string ErrorMessage { get; set; }

    private CipherSubmit submission = new();
    private CipherComments PackComments = new();

    private CipherData.Models.UpdatePackage RequestedUpdate = CipherData.Models.UpdatePackage.Empty();

    private void Submit()
    {
        RequestedUpdate.PackageDescription = PackComments.Value();

        JsonRequest = RequestedUpdate.ToJson();
    }
}
