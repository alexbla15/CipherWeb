@page "/forms/AddVessel"

@inject NavigationManager Navigation

<ResourceForm Title="@NavLink.Name">
    <CipherVesselCard @ref=VesDetails SetMode="@FormMode.Create" Title="" ChosenVessel="@SetVessel" />
    <CipherJsonCheck JsonValue="@JsonRequest"/>
    <CipherSubmit Click="Submit" Valid="@Valid" ErrorMessage="@ErrorMessage" @ref=submission />
</ResourceForm>

@code {
    /// <summary>
    /// Is form valid for submission.
    /// </summary>
    [Parameter]
    public bool Valid { get; set; } = true;

    /// <summary>
    /// Page nav link.
    /// </summary>
    [Parameter]
    public MySubNavLink NavLink { get; set; } = CipherNavLinks.AddVessel;

    /// <summary>
    /// Json request that will be sent to the API server.
    /// </summary>
    [Parameter]
    public string? JsonRequest { get; set; }

    /// <summary>
    /// Error message upon improper submission.
    /// </summary>
    [Parameter]
    public string? ErrorMessage { get; set; }

    /// <summary>
    /// API result to submission. Empty if the submission was unsuccessful.
    /// </summary>
    [Parameter]
    public Vessel? Result { get; set; }

    /// <summary>
    /// API response to submission.
    /// </summary>
    [Parameter]
    public ErrorResponse Error { get; set; } = ErrorResponse.Success;

    private Vessel? SetVessel;

    private CipherSubmit submission = new();
    private VesselRequest ves = VesselRequest.Empty();
    private CipherVesselCard VesDetails = new();

    /// <summary>
    /// Fill all needed details for new package based on the form details.
    /// </summary>
    public void Submit()
    {
        Tuple<bool, string> CheckResult = VesDetails.Value().Check();

        (Valid, ErrorMessage) = (CheckResult.Item1, $"שגיאה בטופס. שגיאה ב{CheckResult.Item2}.");

        if (CheckResult.Item1)
        {
            ves = VesDetails.Value();
            CheckResult = ves.Check();
            (Valid, ErrorMessage) = (CheckResult.Item1, $"שגיאה בטופס. שגיאה ב{CheckResult.Item2}.");
        }

        JsonRequest = ves.ToJson();

        SendRequest();
    }

    /// <summary>
    /// Send request to API
    /// </summary>
    public void SendRequest()
    {
        if (Valid)
        {
            (Result, Error) = VesselsRequests.CreateVessel(ves);
            if (Error != ErrorResponse.Success)
            {
                Valid = false;
                ErrorMessage = Error.Message;
            }
        }

        submission.Valid = Valid;
        submission.ErrorMessage = ErrorMessage;
    }
}