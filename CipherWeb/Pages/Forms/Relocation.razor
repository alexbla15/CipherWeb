@page "/Forms/Relocation"

<ResourceForm Title="@NavLink?.Name">
    <CipherFormInfo @ref="FormInfo" />

    <CipherComponentCard Title="פרטי תנועה" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
        <CipherLocation Label="@CreateRelocationEvent.Translate(nameof(CachedData.CreateRelocationEventExample.TargetSystem))" @ref=FinalLocation />
        <CipherPackagesPicking Label="@CreateRelocationEvent.Translate(nameof(CachedData.CreateRelocationEventExample.Packages))" @ref="RelocatedPacks" />
        <CipherComments @ref="EventComments" Width="300px" />
    </CipherComponentCard>
    
    <CipherJsonCheck JsonValue="@JsonRequest"/>

    <CipherSubmit Click="Submit" Valid="@Valid" ErrorMessage="@ErrorMessage" @ref=submission />
</ResourceForm>

@code {
    /// <summary>
    /// Page nav link.
    /// </summary>
    [Parameter]
    public MySubNavLink NavLink { get; set; } = CipherNavLinks.Relocation;

    /// <summary>
    /// Is form valid for submission.
    /// </summary>
    [Parameter]
    public bool Valid { get; set; } = true;

    /// <summary>
    /// Json request that will be sent to the API server.
    /// </summary>
    [Parameter]
    public string? JsonRequest { get; set; }

    /// <summary>
    /// API event result to submission. Empty if the submission was unsuccessful.
    /// </summary>
    [Parameter]
    public Event? ResultEvent { get; set; }

    /// <summary>
    /// API response to submission.
    /// </summary>
    [Parameter]
    public ErrorResponse Error { get; set; } = ErrorResponse.Success;

    /// <summary>
    /// Error message upon improper submission.
    /// </summary>
    [Parameter]
    public string? ErrorMessage { get; set; }

    private CipherFormInfo FormInfo = new();
    private CipherLocation FinalLocation = new();
    private CipherSubmit submission = new();
    private CipherPackagesPicking RelocatedPacks = new();
    private CipherComments EventComments = new();

    private CreateRelocationEvent RequestedEvent = CreateRelocationEvent.Empty();

    /// <summary>
    /// Fill all needed details for new event based on the form details.
    /// </summary>
    public void Submit()
    {
        Valid = true;

        RequestedEvent = new CreateRelocationEvent(
            worker: FormInfo.GetWorker(),
            timestamp: FormInfo.GetDateTime(),
            targetSystem: FinalLocation.ChosenSystem,
            packages : RelocatedPacks.SelectedPackages,
            comments: EventComments.Comments
        );

        (Valid, ErrorMessage) = RequestedEvent.Check();

        SendRequest();
    }

    /// <summary>
    /// Send request to API
    /// </summary>
    public void SendRequest()
    {
        if (Valid)
        {
            CreateEvent ev = RequestedEvent.Create();
            JsonRequest = ev.ToJson();
            (ResultEvent, Error) = EventsRequests.CreateEvent(ev);
            if (Error != ErrorResponse.Success)
            {
                Valid = false;
                ErrorMessage = Error.Message;
            }
        }

        UpdateSubmissionSummary();
    }

    private void UpdateSubmissionSummary()
    {
        submission.Valid = Valid;
        submission.ErrorMessage = ErrorMessage;
    }
}