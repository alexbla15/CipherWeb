@inherits RadzenStack

@code {
    /// <summary>
    /// Icon aside the row.
    /// </summary>
    [Parameter]
    public string Icon { get; set; }

    /// <summary>
    /// Label and placeholder of the row.
    /// </summary>
    [Parameter]
    public string? Label { get; set; }

    /// <summary>
    /// Form field width.
    /// </summary>
    [Parameter]
    public string Width { get; set; }

    /// <summary>
    /// Form field height.
    /// </summary>
    [Parameter]
    public string Height { get; set; } = "100%";

    /// <summary>
    /// Space inside component, outside content (Right & Left).
    /// </summary>
    [Parameter]
    public string PaddingHorizontal { get; set; } = "10px";

    /// <summary>
    /// Space inside component, outside content (Top).
    /// </summary>
    [Parameter]
    public string PaddingTop { get; set; } = "20px";

    /// <summary>
    /// Space inside component, outside content (Bottom).
    /// </summary>
    [Parameter]
    public string PaddingBottom { get; set; } = "10px";

    /// <summary>
    /// Icon Size.
    /// </summary>
    [Parameter]
    public string IconFontSize { get; set; } = "xx-large";
}

<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="AlignItems.Center" Gap="5px" >
    <RadzenIcon Icon="@Icon" IconColor="@Colors.PrimaryDark" Style="@($"font-size: {IconFontSize};")" />

    @if(string.IsNullOrEmpty(Label))
    {
        @ChildContent
    }
    else
    {
        <RadzenTemplateForm TItem="object">
            <RadzenFormField Variant=Variant.Flat Text="@Label" Style="@($"width: {Width}; height: {Height}")" AllowFloatingLabel="true">
                <div style="@($"padding-right:{PaddingHorizontal}; padding-left:{PaddingHorizontal}; padding-top:{PaddingTop}; padding-bottom:{PaddingBottom}; width: {Width}")">
                    @ChildContent
                </div>
            </RadzenFormField>
        </RadzenTemplateForm>
    }
</RadzenStack>

