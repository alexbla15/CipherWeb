@inherits RadzenStack

@code {
    [Parameter]
    public string Icon { get; set; }

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public string Width { get; set; }

    [Parameter]
    public string Padding { get; set; }

    [Parameter]
    public string Display { get; set; } = "contents";

    [Parameter]
    public string HelpText { get; set; }

    [Parameter]
    public string HeaderWidth { get; set; } = "100%";

    [Parameter]
    public string HeaderMaxWidth { get; set; } = "180px";

    [Parameter]
    public string PaddingHorizontal { get; set; } = "10px";

    [Parameter]
    public string PaddingTop { get; set; } = "20px";

    [Parameter]
    public string PaddingBottom { get; set; } = "10px";

    [Parameter]
    public bool Chosen { get; set; } = true;

    [Parameter]
    public TooltipPosition HelpTextPosition { get; set; } = TooltipPosition.Bottom;

    private void ToggleVisibility()
    {
        Display = Chosen ? "block" : "none";
    }
}

<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="AlignItems.Center" Gap="5px" >
    <RadzenIcon Icon="@Icon" IconColor="@Colors.PrimaryDark" Style="font-size: xx-large;" />

    @if(string.IsNullOrEmpty(Label))
    {
        @ChildContent
    }
    else
    {
        <RadzenTemplateForm TItem="object">
            <RadzenFormField Variant=Variant.Flat Text="@Label" Style="@($"width: {Width}; height:60px")">
                <div style="@($"padding-right:{PaddingHorizontal}; padding-left:{PaddingHorizontal}; padding-top:{PaddingTop}; padding-bottom:{PaddingBottom}; width: {Width}")">
                    @ChildContent
                </div>
            </RadzenFormField>
        </RadzenTemplateForm>
    }
</RadzenStack>

