@inject DialogService DialogService

@inherits CipherComponentCard

@code {
    [Parameter]
    public TextAlign TdTextAlign { get; set; } = TextAlign.Right;

    /// <summary>
    /// Text shown in case no rows were added.
    /// </summary>
    [Parameter]
    public string HelpText { get; set; } = "במסך זה ניתן להוסיף תעודות מוסרות. להוספה לחצו על כפתור ההוספה למעלה";

    /// <summary>
    /// Help text for add-button.
    /// </summary>
    [Parameter]
    public string AddText { get; set; } = "הוספת תעודה מוסרת";

    /// <summary>
    /// Help text for delete-all-button.
    /// </summary>
    [Parameter]
    public string DeleteAllText { get; set; } = "מחיקת תעודות";

    /// <summary>
    /// All packages available
    /// </summary>
    [Parameter]
    public List<Package> packs { get; set; } = new List<Package>();

    /// <summary>
    /// Error response for fetching data
    /// </summary>
    [Parameter]
    public ErrorResponse error { get; set; } = ErrorResponse.Success;

    private RadzenDataGrid<Package> CustomDataGrid;
    private List<Package> from_packs = new List<Package>();

    private bool ShowHelpText = true;
    private int components = 0;

    protected override void OnInitialized()
    {
        Title ??= "תעודות מוסרות";

        (packs, error) = CachedData.AllPackages;
    }

    /// <summary>
    /// Add a component to the memory.
    /// </summary>
    async Task AddComponent()
    {
        // Create a new Restriction object with a unique ID
        Package pack = Package.Random();
        pack.Uuid = from_packs.Count + 1;

        // Add the new restriction to the existing list
        from_packs.Add(pack);

        StateHasChanged();

        components = from_packs.Count;

        ShowHelpText = false;

        await CustomDataGrid.RefreshDataAsync();
    }

    /// <summary>
    /// Get total sum of masses of package-components.
    /// </summary>
    /// <returns></returns>
    public decimal GetTotal()
    {
        return from_packs.Sum(pack => pack.BrutMass);
    }

    /// <summary>
    /// Deletes a package-component from memory & view.
    /// </summary>
    /// <param name="pack">Package to delete</param>
    async Task DeleteRow(Package pack)
    {
        from_packs.Remove(pack);

        // Reassign IDs after deletion
        for (int i = 0; i < from_packs.Count; i++)
        {
            from_packs[i].Uuid = i + 1;
        }

        CustomDataGrid.Data = from_packs;

        components--;

        await CustomDataGrid.RefreshDataAsync();

        if (from_packs.Count() == 0)
        {
            ShowHelpText = true;
        }
    }

    /// <summary>
    /// Clears all package-components from memory & view.
    /// </summary>
    /// <returns></returns>
    async Task DeleteAll()
    {
        from_packs.Clear();
        components = 0;
        CustomDataGrid.Data = from_packs;

        await CustomDataGrid.RefreshDataAsync();

        ShowHelpText = true;
    }
}

<CipherComponentCard Title="@Title">
    <Buttons>
        <CipherAddBtn Variant="Variant.Outlined" Click="@(args => AddComponent())" HelpText="@AddText" />
        <CipherButton Icon="@Icons.Documents.Delete.DeleteSweep" Variant="Variant.Outlined" Click="@(args => DeleteAll())" HelpText="@DeleteAllText" />
    </Buttons>

    <ChildContent>

        @if (ShowHelpText)
        {
            <CipherText Text="@HelpText" Visible="@ShowHelpText"></CipherText>
        }
        <RadzenDataGrid @ref="CustomDataGrid" Data="@from_packs" TItem="Package" AllowColumnResize="true" Visible="!components.Equals(0)">
            <Columns>
                <RadzenDataGridColumn Width="10%" TItem="Package" Context="pack" Title="פעולות" Filterable="false" Sortable="false" TextAlign="@TdTextAlign">
                    <Template Context="pack">
                        <CipherDeleteButton Variant=Variant.Outlined Click="@(args => DeleteRow(pack))" @onclick:stopPropagation="true" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Package" Property="@(nameof(CachedData.PackageExample.Uuid))" Title="@(Package.Translate(nameof(CachedData.PackageExample.Uuid)))" Width="10%" SortOrder="SortOrder.Ascending" TextAlign="@TdTextAlign" />
                <RadzenDataGridColumn TItem="Package" Property="@(nameof(CachedData.PackageExample.Id))" Title="@(Package.Translate(nameof(CachedData.PackageExample.Id)))" Width="40%" TextAlign="@TdTextAlign">
                    <Template Context="pack">
                        <CipherAutoComplete Data="@packs" TextProperty="@(nameof(CachedData.PackageExample.Id))" @bind-Value="@pack.Id" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Package" Property="@(nameof(CachedData.PackageExample.BrutMass))" Title="משקל מועבר [גר']" Width="40%" TextAlign="@TdTextAlign">
                    <Template Context="pack">
                        <CipherNumeric @bind-Value="@pack.BrutMass" />
                    </Template>
                    <FooterTemplate>
                        מסה כוללת: @GetTotal()
                    </FooterTemplate>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </ChildContent>
</CipherComponentCard>