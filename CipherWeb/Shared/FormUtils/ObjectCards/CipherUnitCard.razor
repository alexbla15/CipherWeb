@inherits CipherComponentCard

<CipherComponentCard WithCard="false" Title="@Title" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
    <HeaderContent>
        @if (SetMode != FormMode.Create)
        {
            <RadzenStack AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                <CipherUnitDropDown Label="@(IUnit.Translate(nameof(IUnit.Name)))"
                                      Change="@Change" @ref="UnitId" ChosenUnit="@ChosenObject"/>
            </RadzenStack>
        }
    </HeaderContent>
    <ChildContent>
        <CipherComponentCard Title="תכונות" WithCard="true" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap" AlignCardItems="center">
            <Buttons>
                @if (SetMode == FormMode.ReadOnly)
                {
                    <CipherNavButton Variant="Variant.Outlined" Icon="@Icons.Documents.Edit.edit" HelpText="עריכת נתונים"
                                     Disabled="@(ChosenObject is null)" Path="@($"{CipherNavLinks.UpdateUnit.Href}?Id={ChosenObject?.Id}")" />
                }
            </Buttons>
            <ChildContent>
                <CipherAutoComplete Label="@(IUnit.Translate(nameof(IUnit.Name)))" Icon="@Icons.Cipher.Unit"
                                    Disabled="@(SetMode == FormMode.ReadOnly || (SetMode == FormMode.Update && ChosenObject is null))" Value="@ChosenObject?.Name" @ref=UnitName/>
                <CipherAutoComplete Label="@(IUnit.Translate(nameof(IUnit.Description)))" Icon="@Icons.Documents.Page.description"
                                    Disabled="@(SetMode == FormMode.ReadOnly || (SetMode == FormMode.Update && ChosenObject is null))" Value="@ChosenObject?.Description" @ref=UnitDescription />
                <CipherUnitDropDown Label="@(IUnit.Translate(nameof(IUnit.Parent)))" Disabled="@(SetMode == FormMode.ReadOnly || (SetMode == FormMode.Update && ChosenObject is null))"
                                    ChosenUnit="@ChosenObject?.Parent" @ref=UnitParent />
            </ChildContent>
        </CipherComponentCard>
    </ChildContent>
</CipherComponentCard>

@code {
    /// <summary>
    /// Define the usage of this object-card
    /// </summary>
    [Parameter]
    public FormMode SetMode { get; set; } = FormMode.Create;

    /// <summary>
    /// Chosen vessel within the card
    /// </summary>
    [Parameter]
    public IUnit? ChosenObject { get; set; }

    /// <summary>
    /// Event that takes place upon changing the object.
    /// </summary>
    [Parameter]
    public EventCallback<object> ChangeObject { get; set; }

    /// <summary>
    /// Error response for fetching data
    /// </summary>
    [Parameter]
    public ErrorResponse Error { get; set; } = ErrorResponse.Success;

    private CipherAutoComplete UnitName = new();
    private CipherAutoComplete UnitDescription = new();
    private CipherUnitDropDown UnitId = new();
    private CipherUnitDropDown UnitParent = new();

    protected override void OnInitialized()
    {
        Title ??= "פרטי היחידה";

        // DON'T DELETE - it made the form refresh with details from url
        if (ChosenObject != null) StateHasChanged();
    }

    public void Change()
    {
        ChosenObject = UnitId.ChosenUnit;
        ChangeObject.InvokeAsync();
        StateHasChanged();
    }

    public IUnitRequest Value()
    {
        var req = Config.UnitRequest;
        req.Name = UnitName.Value;
        req.Description = UnitDescription.Value;
        req.ParentId = UnitParent.ChosenUnit?.Id;
        return req;
    }
}