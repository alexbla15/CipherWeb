@inherits CipherComponentCard

@code {
    /// <summary>
    /// Width of each row within the component
    /// </summary>
    [Parameter]
    public string RowWidth { get; set; } = "300px";

    /// <summary>
    /// Set editability of each row.
    /// </summary>
    [Parameter]
    public bool ReadOnly { get; set; } = false;

    /// <summary>
    /// All packages available
    /// </summary>
    [Parameter]
    public List<Package> packs { get; set; } = new List<Package>();
    
    /// <summary>
    /// Chosen package to view within card.
    /// </summary>
    [Parameter]
    public Package? ChosenPackage { get; set; }

    /// <summary>
    /// Error response for fetching data
    /// </summary>
    [Parameter]
    public ErrorResponse error { get; set; } = ErrorResponse.Success;

    private List<Process> PackProcesses = new();

    private CipherPackageId SetPack = new();
    private CipherPackageId PackId = new();

    protected override void OnInitialized()
    {
        (packs, error) = CachedData.AllPackages;
    }

    public void Change()
    {
        ChosenPackage = SetPack.ChosenPackage;

        if (SetPack.ChosenPackage != null)
        {
            (PackProcesses, error) = SetPack.ChosenPackage.Processes();
        }
        else
        {
            (PackProcesses, error) = (new List<Process>(), ErrorResponse.Success);
        }

        StateHasChanged();
    }
}

<CipherComponentCard Title="@Title" WithCard="@WithCard" BackgroundColor="transparent">
    <HeaderContent>
        <RadzenStack AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
            <CipherPackageId @ref=SetPack Icon="" Change="Change" />
        </RadzenStack>
    </HeaderContent>
    <ChildContent>
        <CipherComponentCard Title="תכונות" WithCard="true" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap" AlignCardItems="center">
            <Buttons>
                <CipherNavButton Variant="Variant.Outlined" Icon="@Icons.Documents.Edit._Edit" HelpText="עריכת נתונים" 
                Disabled="@(ChosenPackage != null)" Path="@($"{CipherNavLinks.UpdatePackage.Href}?Id={ChosenPackage?.Id}")" />
            </Buttons>
            <ChildContent>
                <CipherPackageId Width="@RowWidth" Disabled="@ReadOnly" ChosenPackage="ChosenPackage" />

                <CipherComments WithCard="false" Title="" Label="@Package.Translate(nameof(CachedData.PackageExample.Description))"
                                Icon="@Icons.Documents.Page.Description" Width="300px" Comments="@ChosenPackage?.Description" />
                <CipherNumeric Amount="@((ChosenPackage == null) ? 0 : ChosenPackage.BrutMass)" Label="@(Package.Translate(nameof(CachedData.PackageExample.BrutMass)))" Icon="@Icons.Professions.Construction.Scale" Width="@RowWidth" Disabled="@ReadOnly" />
                <CipherNumeric Amount="@((ChosenPackage == null) ? 0 : ChosenPackage.NetMass)" Label="@(Package.Translate(nameof(CachedData.PackageExample.NetMass)))" Icon="@Icons.Professions.Construction.Scale" Width="@RowWidth" Disabled="@ReadOnly" />

                <CipherCategoryDropDown ChosenCategory="@ChosenPackage?.Category" Width="@RowWidth" Disabled="@ReadOnly" />
                <CipherVesselDropDown ChosenVessel="@ChosenPackage?.Vessel" Width="@RowWidth" Disabled="@ReadOnly" />
                <CipherLocation ChosenSystem="@ChosenPackage?.System" Width="@RowWidth" Disabled="@ReadOnly" />
                <CipherDatePicker Value="@ChosenPackage?.CreatedAt" Label="@(Package.Translate(nameof(CachedData.PackageExample.CreatedAt)))" Disabled="@ReadOnly" Width="@RowWidth" />

                <CipherProcesses ChosenProcesses="@ChosenPackage?.DestinationProcesses.ToList()" Disabled="@ReadOnly" Label="@Package.Translate(nameof(CachedData.PackageExample.DestinationProcesses))" />
                <CipherPackageId ChosenPackage="@ChosenPackage?.Parent" Width="@RowWidth" Disabled="@ReadOnly" Label="@(Package.Translate(nameof(CachedData.PackageExample.Parent)))" />

                @if (ChosenPackage != null)
                {
                    @foreach (string prop in ChosenPackage.Properties.Keys)
                    {
                        <CipherAutoComplete Label="@prop" Value="@ChosenPackage.Properties[prop]" Disabled="true"
                                            Icon="@Icons.Cipher.Properties" />
                    }
                }
                <CipherPackagesPicking SelectedPackages="@ChosenPackage?.Children?.ToList()" Width="@RowWidth" Disabled="@ReadOnly" Label="@(Package.Translate(nameof(CachedData.PackageExample.Children)))" />
            </ChildContent>
        </CipherComponentCard>

        <CipherProcessesTable WithCard="true" Title="תנועות" Processes="@PackProcesses" WithHeaderContent="false"/>
    </ChildContent>
</CipherComponentCard>