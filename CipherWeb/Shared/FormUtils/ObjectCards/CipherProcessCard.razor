@inherits CipherComponentCard

<CipherComponentCard WithCard="false" Title="@Title" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
    <HeaderContent>
        @if (SetMode != FormMode.Create)
        {
            <RadzenStack AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                <CipherProcess @ref=SetProc Icon="@Icons.Cipher.Process" Change="@Change" ChosenProcess="@ChosenObject" />
            </RadzenStack>
        }
    </HeaderContent>
    <ChildContent>
        <CipherComponentCard Title="פרטי התהליך" ContentDisplay="flex" ContentJustify="flex-start" ContentFlexWrap="wrap">
            <Buttons>
                @if (SetMode == FormMode.ReadOnly)
                {
                    <CipherNavButton Variant="Variant.Outlined" Icon="@Icons.Documents.Edit.edit" HelpText="עריכת נתונים"
                                     Disabled="@(ChosenObject is null)" Path="@($"{CipherNavLinks.UpdateProcess.Href}?Id={ChosenObject?.Id}")" />
                }
            </Buttons>
            <ChildContent>
                <CipherAutoComplete Label="@(IProcessDefinition.Translate(nameof(IProcessDefinition.Name)))" Icon="@Icons.Cipher.Process" @ref=ProcName
                                    Disabled="@(SetMode == FormMode.ReadOnly || (SetMode == FormMode.Update && ChosenObject is null))" Value="@ChosenObject?.Name" />
                <CipherAutoComplete Label="@(IProcessDefinition.Translate(nameof(IProcessDefinition.Description)))" Icon="@Icons.Communication.Chat.comment" @ref=ProcDescription
                                    Disabled="@(SetMode == FormMode.ReadOnly || (SetMode == FormMode.Update && ChosenObject is null))" Value="@ChosenObject?.Description" />
            </ChildContent>
        </CipherComponentCard>
        @if (SetMode == FormMode.Create)
        {
            <CipherProcessSteps @ref="ProcSteps" ChosenSteps="@ChosenObject?.Steps" />
        }
    </ChildContent>
</CipherComponentCard>

@code {
    /// <summary>
    /// Define the usage of this object-card
    /// </summary>
    [Parameter]
    public FormMode SetMode { get; set; } = FormMode.Create;

    /// <summary>
    /// Chosen object to view within card.
    /// </summary>
    [Parameter]
    public IProcessDefinition? ChosenObject { get; set; }

    /// <summary>
    /// Event that takes place upon changing the package.
    /// </summary>
    [Parameter]
    public EventCallback<object> ChangeObject { get; set; }

    private CipherAutoComplete ProcName = new();
    private CipherAutoComplete ProcDescription = new();
    private CipherProcessSteps ProcSteps = new();

    private CipherProcess SetProc = new();

    protected override void OnInitialized()
    {
        Title ??= "פרטי התהליך";

        // DON'T DELETE - it made the form refresh with details from url
        if (ChosenObject != null) StateHasChanged();
    }

    public void Change()
    {
        ChosenObject = SetProc.ChosenProcess;
        ChangeObject.InvokeAsync();
        StateHasChanged();
    }

    public IProcessDefinitionRequest Value()
    {
        IProcessDefinitionRequest proc = Config.ProcessDefinitionRequest();

        if (ProcName.Check()) proc.Name = ProcName.Value;
        if (ProcDescription.Check()) proc.Description = ProcDescription.Value;
        proc.Steps = ProcSteps.ChosenSteps;

        return proc;
    }
}