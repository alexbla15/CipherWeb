@inherits CipherComponentCard

@code {
    /// <summary>
    /// Is submission acceptable.
    /// </summary>
    [Parameter]
    public bool condition { get; set; }

    /// <summary>
    /// Is alert visible under submission button.
    /// </summary>
    [Parameter]
    public bool alertVisible { get; set; }

    /// <summary>
    /// Alert text according to the submission.
    /// </summary>
    [Parameter]
    public string? alertText { get; set; }

    /// <summary>
    /// Summerizes the action that user tries to do with this form.
    /// </summary>
    [Parameter]
    public string ActionText { get; set; }

    /// <summary>
    /// Path to go to when user cancels the form.
    /// </summary>
    [Parameter]
    public string CancelPath { get; set; } = CipherNavLinks.Forms.Href;

    /// <summary>
    /// Background styling of alert. Must be AlertStyle-enum.
    /// </summary>
    [Parameter]
    public AlertStyle alertStyle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Title ??= "סיכום ואישור";
        alertStyle = AlertStyle.Success;
        condition = true;
    }

    /// <summary>
    /// Control alert upon saving.
    /// </summary>
    public void Save()
    {
        alertVisible = true;
        alertStyle = (condition) ? AlertStyle.Success : AlertStyle.Warning;
        alertText = (condition) ? "טופס הוזן בהצלחה" : "שגיאה בהזנת טופס";
    }
}

<CipherComponentCard Title="@Title" WithCard="@WithCard" ButtonsGap="10px" ContentPadding="">
    <Buttons>
        @if (string.IsNullOrEmpty(ActionText))
        {
            <CipherSubmitButton Click=@(args => Save()) Size="ButtonSize.Medium" />
            <CipherNavButton ColorStyle="ButtonStyle.Danger" Variant="Variant.Outlined" Icon="@Icons.Documents.Delete.Cancel" Text="ביטול" Path="@CancelPath" Size="ButtonSize.Medium" />
        }
    </Buttons>
    <ChildContent>
        @if (!string.IsNullOrEmpty(ActionText))
        {
            <CipherText TextStyle="TextStyle.Subtitle1" Text="@ActionText"></CipherText>
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End">
                <CipherSubmitButton Click=@(args => Save()) Size="ButtonSize.Medium" />
                <CipherNavButton ColorStyle="ButtonStyle.Danger" Variant="Variant.Outlined" Icon="@Icons.Documents.Delete.Cancel" Text="ביטול" Path="@CancelPath" Size="ButtonSize.Medium" />
            </RadzenStack>
        }
        <RadzenAlert Visible="@alertVisible" Text="@alertText" AlertStyle="@alertStyle" Style="width:100%" />
    </ChildContent>
</CipherComponentCard>