@inject NavigationManager navigationManager

@inherits RadzenStack

@code {
    /// <summary>
    /// Placeholder and label of search row.
    /// </summary>
    [Parameter]
    public string? LabelText { get; set; }

    /// <summary>
    /// AutoComplete width
    /// </summary>
    [Parameter]
    public string Width { get; set; } = "100%";

    /// <summary>
    /// Path to be searched in case on Enter pressed / search-button clicked.
    /// </summary>
    [Parameter]
    public string SearchPath { get; set; } = CipherNavLinks.FreeSearch.Href;

    /// <summary>
    /// Background color of search button.
    /// </summary>
    [Parameter]
    public string ButtonColor { get; set; } = Colors.PrimaryDarker;

    /// <summary>
    /// Alignment of row.
    /// </summary>
    [Parameter]
    public JustifyContent JustifyRow { get; set; } = JustifyContent.Center;

    /// <summary>
    /// Event in case a key was pressed within AutoComplete box.
    /// </summary>
    [Parameter]
    public EventCallback<KeyboardEventArgs> OnKeyDown { get; set; }

    private string SearchText = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        LabelText ??= "חיפוש תעודה";

        // Set default OnKeyDown if not provided
        if (!OnKeyDown.HasDelegate)
        {
            OnKeyDown = EventCallback.Factory.Create<KeyboardEventArgs>(this, SearchFunc);
        }
    }

    /// <summary>
    /// Function taking place upon clicking Enter.s
    /// </summary>
    /// <param name="args"></param>
    private async Task SearchFunc(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            // Wait for a short duration to ensure SearchText is updated
            await Task.Delay(1);
            if (!string.IsNullOrWhiteSpace(SearchText))
            {
                string url = $"{SearchPath}?search={SearchText}";
                navigationManager.NavigateTo(url, forceLoad:true);
            }
        }
    }
}

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="@AlignItems.Center" JustifyContent="@JustifyRow" Gap="0px" Style="@Style">
    <CipherAutoComplete Label="@LabelText" Style="@($"border-top-left-radius:0; border-bottom-left-radius:0; width:{Width}")" ShowErrors="false" @bind-value="SearchText"
                        Data="@TestedData.Packages" TextProperty="Id" OnKeyDown="SearchFunc"></CipherAutoComplete>

    <CipherNavButton Icon="@Icons.SearchAndFilter.Search" IconColor="white" ColorStyle="ButtonStyle.Primary" ColorShade="Shade.Darker" ButtonTextAlign="right" Height="53px" 
                    Path="@($"{SearchPath}?search={SearchText}")"
                     Style="@($"border: 1px solid {ButtonColor}; padding-left:10px; border-top-right-radius:0; border-bottom-right-radius:0;")" />
</RadzenStack>
