@inherits CipherComponentCard

@code {
    /// <summary>
    /// Text shown in case no rows were added.
    /// </summary>
    [Parameter]
    public string HelpText { get; set; } = "כאן ניתן להוסיף פונקציות חדשות. להוספה לחצו על כפתור ההוספה למעלה";

    /// <summary>
    /// Text to be shown when type cannot accept the selected aggregation function.
    /// </summary>
    [Parameter]
    public string TypeIncompatible { get; set; } = "פונקציה לא אפשרית לפרמטר זה";

    /// <summary>
    /// Add an aggregation function to the table - text.
    /// </summary>
    [Parameter]
    public string AddAggregateText { get; set; } = "הוספת פונקציה";

    /// <summary>
    /// Delete all aggregation functions - text.
    /// </summary>
    [Parameter]
    public string DeleteAllAggregatesText { get; set; } = "מחיקת כל הפונקציות";

    [Parameter]
    public List<AggregateItem> ChosenAggregates { get; set; } = new();

    private RadzenDataGrid<AggregateItem> CustomDataGrid = new();
    private AggregateItem old_agg = new();

    private bool typeIncompatibleAlertVisible = false;

    /// <summary>
    /// Add an aggregation row.
    /// </summary>
    private async Task AddRow()
    {
        ChosenAggregates.Add(new AggregateItem());
        StateHasChanged();
        await CustomDataGrid.RefreshDataAsync();
    }

    /// <summary>
    /// Delete selected aggregation.
    /// </summary>
    private async Task DeleteRow(AggregateItem agg)
    {
        ChosenAggregates.Remove(agg);
        StateHasChanged();
        await CustomDataGrid.RefreshDataAsync();
    }

    /// <summary>
    /// Save changes to the aggregation selected.
    /// </summary>
    private async Task SaveRow(AggregateItem agg)
    {
        ChosenAggregates.Add(agg);

        await CustomDataGrid.UpdateRow(agg);
        await CustomDataGrid.RefreshDataAsync();
    }

    /// <summary>
    /// Delete the selected aggregation.
    /// </summary>
    private void DeleteAggregation()
    {
        ChosenAggregates = new();
    }

    /// <summary>
    /// Close the shown alert.
    /// </summary>
    private void CloseAlert()
    {
        typeIncompatibleAlertVisible = false;
    }

    /// <summary>
    /// Get list of all chosen aggregates.
    /// </summary>
    /// <returns></returns>
    public List<AggregateItem> GetData()
    {
        return CustomDataGrid?.Data?.ToList() ?? new();
    }
}

<CipherComponentCard Title="@Title">
    <Buttons>
        <CipherAddBtn HelpText="@AddAggregateText" Click="@AddRow" ColorStyle="ButtonStyle.Success" ColorShade="Shade.Dark" Variant="Variant.Outlined"></CipherAddBtn>
        <CipherDeleteButton HelpText="@DeleteAllAggregatesText" Click="@DeleteAggregation" ColorStyle="ButtonStyle.Danger" ColorShade="Shade.Default" Variant="Variant.Outlined"></CipherDeleteButton>
    </Buttons>

    <ChildContent>
        @if (ChosenAggregates.Count() == 0)
        {
            <CipherText Text="@HelpText" />
        }
        <RadzenDataGrid @ref="CustomDataGrid" Data="@ChosenAggregates" TItem="AggregateItem" AllowColumnResize="true" Visible="@(ChosenAggregates.Count>0)">
            <Columns>
                <RadzenDataGridColumn Width="10%" TItem="AggregateItem" Title="פעולות" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                    <Template Context="agg">
                        <CipherDeleteButton Variant=Variant.Outlined Click="@(args => DeleteRow(agg))" @onclick:stopPropagation="true" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="AggregateItem" Property="@nameof(AggregateItem.Attribute)" Title="@((new AggregateItem()).Translate(nameof(AggregateItem.Attribute)))" TextAlign="TextAlign.Center">
                    <Template Context="agg">
                        <RadzenTextBox @bind-Value="@agg.Attribute" Style="width:100%"/>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="AggregateItem" Property="@nameof(AggregateItem.As)" Title="@((new AggregateItem()).Translate(nameof(AggregateItem.As)))" TextAlign="TextAlign.Center">
                    <Template Context="agg">
                        <RadzenTextBox @bind-Value="@agg.As" Style="width:100%"/>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="AggregateItem" Property="@nameof(AggregateItem.Method)" Title="@((new AggregateItem()).Translate(nameof(AggregateItem.Method)))" TextAlign="TextAlign.Center">
                    <Template Context="agg">
                        <RadzenDropDown Style="width: 100%" TValue="Method" @bind-Value="@agg.Method" Data="@(new List<Method>() {Method.sum, Method.avg, Method.first, Method.last, Method.count, Method.max, Method.min})"
                                        Placeholder="@((new AggregateItem()).Translate(nameof(AggregateItem.Method)))">
                            <ValueTemplate Context="met">
                                @if (met == Method.count)
                                {
                                    @("כמות")
                                }
                                else if (met == Method.avg)
                                {
                                @("ממוצע")
                                }
                                else if (met == Method.sum)
                                {
                                    @("סכום")
                                }
                                else if (met == Method.max)
                                {
                                    @("מקסימום")
                                }
                                else if (met == Method.min)
                                {
                                    @("מינימום")
                                }
                                else if (met == Method.first)
                                {
                                    @("ראשון")
                                }
                                else
                                {
                                    @("אחרון")
                                }
                            </ValueTemplate>
                            <Template Context="met2">
                                @if (met2 == Method.count)
                                {
                                    @("כמות")
                                }
                                else if (met2 == Method.avg)
                                {
                                    @("ממוצע")
                                }
                                else if (met2 == Method.sum)
                                {
                                    @("סכום")
                                }
                                else if (met2 == Method.max)
                                {
                                    @("מקסימום")
                                }
                                else if (met2 == Method.min)
                                {
                                    @("מינימום")
                                }
                                else if (met2 == Method.first)
                                {
                                    @("ראשון")
                                }
                                else
                                {
                                    @("אחרון")
                                }
                            </Template>
                        </RadzenDropDown>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>

        <RadzenAlert Visible="@typeIncompatibleAlertVisible" Text="@TypeIncompatible" AlertStyle="AlertStyle.Danger"
                     Style="width:98%; padding:5px; margin: 1rem 5px" Close="@CloseAlert" />
    </ChildContent>
</CipherComponentCard>