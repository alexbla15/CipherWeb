@inherits CipherComponentCard

<CipherComponentCard MaxWidth="@MaxWidth" Width="@Width" Title="@Title" WithCard="@WithCard" WithButtons="@WithButtons" Height="@Height">
    <HeaderContent>
        @HeaderContent
    </HeaderContent>
    <Buttons>
        @AdditionalButtons
        @ExportButtons()
        @ExpandBtn()
        @MarkSavedBtn()
    </Buttons>
    <ChildContent>
        @ComponentContent
    </ChildContent>
</CipherComponentCard>

@code {
    /// <summary>
    /// Content within the card.
    /// </summary>
    [Parameter]
    public RenderFragment? ComponentContent { get; set; }

    /// <summary>
    /// Function to retrieve the DataSource for the DataTable
    /// </summary>
    [Parameter]
    public Func<List<Dictionary<string, object?>>>? GetDataSource { get; set; }

    /// <summary>
    /// File name for excel export.
    /// </summary>
    [Parameter]
    public string? FileTitle { get; set; }

    /// <summary>
    /// Path for the expanded version of a table.
    /// </summary>
    [Parameter]
    public string? ExpandPath { get; set; } = null;

    /// <summary>
    /// Allow exporting the data to EXCEL.
    /// </summary>
    [Parameter]
    public bool ExcelExport { get; set; } = true;

    /// <summary>
    /// Allow exporting the data to PDF.
    /// </summary>
    [Parameter]
    public bool PDFExport { get; set; } = true;

    /// <summary>
    /// Allow report to be sharable.
    /// </summary>
    [Parameter]
    public bool Sharable { get; set; } = false;

    /// <summary>
    /// If true, this is a report created with CustomReport.
    /// </summary>
    [Parameter]
    public bool IsReport { get; set; } = false;

    /// <summary>
    /// Is the report saved into favourites of user?
    /// </summary>
    [Parameter]
    public bool IsFavourite { get; set; } = false;

    [Parameter]
    public bool DisableExport { get; set; } = true;

    /// <summary>
    /// More buttons for table card
    /// </summary>
    [Parameter]
    public RenderFragment? AdditionalButtons { get; set; }

    [Parameter]
    public Type? DataType { get; set; }

    public void Toggle() => IsFavourite = !IsFavourite;

    private RenderFragment? ExportButtons()
    {
        return@<div>
        @if (ExcelExport)
    {
        <CipherExcelButton FileName="@FileTitle" OnClickFunc="@GetDataSource" Disabled="@DisableExport"/>
    }
        @if (PDFExport)
    {
        <CipherPDFButton FileName="@FileTitle" OnClickFunc="@GetDataSource" Disabled="@DisableExport" />
    }
    </div>
    ;
    }

    private RenderFragment? ExpandBtn()
    {
        if (string.IsNullOrEmpty(ExpandPath)) return null;
        
        return@<CipherNavButton Icon="@Icons.Arrows.Squared.open_in_new" Variant="Variant.Outlined" 
        HelpText="הרחבה" Path="@ExpandPath" />;    
    }

    private RenderFragment? MarkSavedBtn()
    {
        if (!IsReport) return null;

        return @<CipherButton @bind-Value=@IsFavourite Variant="@(IsFavourite ? Variant.Filled : Variant.Outlined)"
                          ColorStyle="@(IsFavourite ? ButtonStyle.Primary : ButtonStyle.Danger)" ColorShade=Shade.Default
                          Icon="@Icons.Awards.star" HelpText="@(IsFavourite ? "הסרה ממועדפים" : "הוספה למועדפים" )" Click="@Toggle" />;
    }
}