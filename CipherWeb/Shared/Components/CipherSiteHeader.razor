@using System.Text
@using System.Reflection

@inject DialogService DialogService
@inject NavigationManager NavigationManager

<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
             AlignItems="AlignItems.Center" Gap="1rem" Style="@($"width:{Header_Width}")">
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceEvenly"
                 AlignItems="AlignItems.Center" Gap="0" Style="@BlockWidth()">
        @* -- LOGO BLOCK -- *@
        <RadzenLink Path=@CipherNavLinks.Home.Href Text="מסך הבית" Style="@($"width:{Logo_Width}")">
            <CipherLogo />
        </RadzenLink>

        @* -- SEARCH BLOCK -- *@
        <CipherSearchRow LabelText="חיפוש" Width="@Search_Width"></CipherSearchRow>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceEvenly"
                 AlignItems="AlignItems.Center" Gap="1rem" Style="@BlockWidth()">
        @* -- CLASSIFCIATION BLOCK -- *@
        <CipherRestriction />
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceEvenly"
                 AlignItems="AlignItems.Center" Gap="1rem" Style="@BlockWidth()">
        @* -- ACCOUNT BLOCK --*@
        <RadzenCard Variant="Variant.Text" Style="@($"{AccountStyle()}; width:{Account_Width};")">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenLink Path="Personal" Text="אזור אישי">
                    <CipherAccountImage />
                </RadzenLink>
                <RadzenStack AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center" Gap="0.2rem">
                    <CipherText Text="@Constants.SetUser.Name" TextAlign="TextAlign.Right" TextColor="var(--cipher-header-color)" TextStyle="TextStyle.H6" />
                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Start" Gap="0.3rem">
                        <CipherButton Icon="@Icons.Social.SinglePerson.AccountCircle" Size="ButtonSize.ExtraSmall" ColorStyle="ButtonStyle.Primary" ColorShade="Shade.Darker" HelpText="שינוי תצוגה"
                                      Click="@(args => ChangeRole())" Text="@($"מוצג כמסך של {Roles.CurrnetRole}")" Variant="Variant.Outlined"
                                      Width="100%" MaxWidth="180px" ButtonTextAlign="right" HelpTextPosition="TooltipPosition.Bottom" />

                        @* -- FAST ACTIONS -- *@
                        <CipherNavButton Icon="@Icons.UiComponents.Settings" HelpText="הגדרות" Size="ButtonSize.ExtraSmall" Variant="Variant.Outlined" ColorShade="Shade.Darker"
                                         Path="/Settings" HelpTextPosition="TooltipPosition.Bottom" />
                        <CipherNavButton Icon="@Icons.Symbols.QuestionMark._QuestionMark" HelpText="הסברים ותמיכה" Size="ButtonSize.ExtraSmall" Variant="Variant.Outlined" ColorShade="Shade.Darker"
                                         Path="@CipherNavLinks.Information.Href" HelpTextPosition="TooltipPosition.Bottom" />
                    </RadzenStack>
                </RadzenStack>
            </RadzenStack>
        </RadzenCard>
    </RadzenStack>
</RadzenStack>

@code {
    /// <summary>
    /// Total width of site header.
    /// </summary>
    [Parameter]
    public string Header_Width { get; set; } = "100%";

    /// <summary>
    /// Width of logo within the header.
    /// </summary>
    [Parameter]
    public string Logo_Width { get; set; }

    // ACCOUNT PROPERTIES

    /// <summary>
    /// Width of account-block within header.
    /// </summary>
    [Parameter]
    public string Account_Width { get; set; }

    /// <summary>
    /// Space outside content within account-block.
    /// </summary>
    [Parameter]
    public string Account_Padding { get; set; } = "0";

    /// <summary>
    /// Width of seach-row.
    /// </summary>
    [Parameter]
    public string Search_Width { get; set; }

    public string NewRole;

    public async Task ChangeRole()
    {
        var result = await DialogService.OpenAsync("", ds =>
    @<RadzenStack Gap="1rem" Style="text-align:right;" dir="rtl" AlignItems="AlignItems.Center">
        <CipherAutoComplete Icon="@Icons.Cipher.Account_Old" Label="תצוגה נוכחית" Value="@Roles.CurrnetRole" Style="width: 200px" Disabled="true" />
        <CipherAutoComplete Icon="@Icons.Cipher.Account_New" Label="תצוגה חדשה" Style="width: 200px" @bind-Value=@NewRole Data="@Roles.Get()" />
        <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
            <RadzenStack Orientation="Orientation.Horizontal">
                <CipherButton Variant="Variant.Outlined" Icon="@Icons.Symbols.V.Done" Text="אישור" Click="() => ds.Close(ChangeRoleView())" ColorStyle="ButtonStyle.Success" ColorShade="Shade.Dark" Width="100px" />
                <CipherButton Variant="Variant.Outlined" Icon="@Icons.Documents.Delete.Cancel" Text="ביטול" Click="() => ds.Close(false)" ColorStyle="ButtonStyle.Danger" ColorShade="Shade.Dark" Width="100px" />
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
    );
    }

    /// <summary>
    /// Set a different role, and close the dialog.
    /// </summary>
    /// <returns></returns>
    public bool ChangeRoleView()
    {
        Roles.CurrnetRole = NewRole;
        return true;
    }

    /// <summary>
    /// Set the style for account-block.
    /// </summary>
    /// <returns></returns>
    public string AccountStyle()
    {
        return $@"
                padding: {Account_Padding};
                width: {Account_Width};
                ";
    }

    /// <summary>
    /// Set the common-width of each block.
    /// </summary>
    /// <returns></returns>
    public string BlockWidth()
    {
        return $"width:{100 / 3}% ";
    }
}