@using System.Text
@using System.Reflection

@inject ICipherInfo _db
@inherits RadzenDataGrid<Event>

@code {
    RadzenDataGrid<Event> CustomDataGrid;

    List<Event> events = new List<Event>();

    Event old_ev = new Event();

    int evs = 0;

    protected override async Task OnInitializedAsync()
    {
        events = await _db.GetEvents();
    }

    private void AddComponent()
    {
        if (evs == events.Count)
        {
            int next_id = evs + 1;

            Event new_ev = new Event() { Id = next_id };

            // from_packs.Add(new_pack);

            evs += 1;
            CustomDataGrid.InsertRow(new_ev);
        }
    }


    async Task EditRow(Event ev)
    {
        // prevent editing of two rows in parallel
        if (CustomDataGrid.Count == events.Count)
        {
            foreach (PropertyInfo prop in typeof(Event).GetProperties())
            {
                typeof(Event).GetProperty(prop.Name).SetValue(old_ev, typeof(Event).GetType().GetProperty(prop.Name).GetValue(ev));
            }

            events.Remove(ev);
            await CustomDataGrid.EditRow(ev);
        }
    }

    async Task CancelEdit(Event ev)
    {
        foreach (PropertyInfo prop in typeof(Event).GetProperties())
        {
            typeof(Event).GetProperty(prop.Name).SetValue(ev, typeof(Event).GetType().GetProperty(prop.Name).GetValue(old_ev));
        }

        await SaveRow(ev);
    }

    async Task DeleteRow(Event ev)
    {
        events.Remove(ev);

        foreach (Event e in events)
        {
            e.Id = events.IndexOf(e) + 1;
        }

        CustomDataGrid.Data = events;

        evs -= 1;
        await CustomDataGrid.RefreshDataAsync();
    }

    async Task SaveRow(Event ev)
    {
        events.Add(ev);

        await CustomDataGrid.UpdateRow(ev);
        await CustomDataGrid.RefreshDataAsync();
    }
}

<CipherDataGrid @ref="CustomDataGrid" Cipher_TItem="Event"
                Data="@events" PageSize="12" WithCustomColumns="true">
    <CustomColumns>
        <RadzenDataGridColumn TItem="Event" Property="Numerator" Title="מספר" Width="75px" />
        <RadzenDataGridColumn TItem="Event" Property="Type" Title="סוג" Width="75px" />
        <RadzenDataGridColumn TItem="Event" Property="Process" Title="תהליך" Width="75px" />
        <RadzenDataGridColumn TItem="Event" Property="UpdatingWorker" Title="שם מזין" Width="75px" />
        <RadzenDataGridColumn TItem="Event" Property="AuthorizingWorker" Title="שם מאשר" Width="75px" />
        <RadzenDataGridColumn TItem="Event" Property="Parameters" Title="פרמטרים" Width="75px" />
        <RadzenDataGridColumn TItem="Event" Property="EventDate" Title="תאריך תנועה" Width="75px" >
            <EditTemplate Context="ev">
            <RadzenDatePicker @bind-Value="@ev.EventDate" />
            </EditTemplate>
        </RadzenDataGridColumn><RadzenDataGridColumn TItem="Event" Property="UpdatingDate" Title="תאריך עדכון" Width="75px">
            <EditTemplate Context="ev">
                <RadzenDatePicker @bind-Value="@ev.UpdatingDate" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Event" Property="ApprovingDate" Title="תאריך אישור" Width="75px">
            <EditTemplate Context="ev">
                <RadzenDatePicker @bind-Value="@ev.ApprovingDate" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Event" Property="Comments" Title="הערות" Width="75px">
            <EditTemplate Context="ev">
                <RadzenTextBox @bind-Value="@ev.Comments" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Width="50px" TItem="Event" Context="evs" Filterable="false" Sortable="false" TextAlign="TextAlign.Right">
            <Template Context="ev">
                <CipherEditButton Click="@(args => EditRow(ev))" @onclick:stopPropagation="true" />
                <CipherDeleteButton Click="@(args => DeleteRow(ev))" @onclick:stopPropagation="true" />
            </Template>
            <EditTemplate Context="ev">
                <CipherSuccessButton Click="@((args) => SaveRow(ev))" />
                <CipherCloseButton Click="@((args) => CancelEdit(ev))" />
            </EditTemplate>
        </RadzenDataGridColumn>
    </CustomColumns>
</CipherDataGrid>