@inherits CipherFormRow

@inject ICipherInfo _db

<CipherFormRow Icon="@Icons.Cipher.Vessel">
    <RadzenDropDownDataGrid TValue=Vessel Data=@AllVessels TextProperty="@(nameof(Vessel.Id))" AllowClear="true"
                            Placeholder="@Label" SearchTextPlaceholder="חיפוש..." @bind-Value="@ChosenVessel" Change="@Change" AllowSorting=false
                            AllowColumnResize="true" AllowFilteringByAllStringColumns="true" Style="@($"width: {Width}")" Disabled="@Disabled">
        <Columns>
            <RadzenDropDownDataGridColumn Property="@(nameof(Vessel.Id))" Title="@(Vessel.Translate(nameof(Vessel.Id)))" />
            <RadzenDropDownDataGridColumn Property="@(nameof(Vessel.Name))" Title="@(Vessel.Translate(nameof(Vessel.Name)))" />
            <RadzenDropDownDataGridColumn Property="@(nameof(Vessel.Type))" Title="@(Vessel.Translate(nameof(Vessel.Type)))" />
            <RadzenDropDownDataGridColumn Property="@(nameof(Vessel.System))" Title="@(Vessel.Translate(nameof(Vessel.System)))">
                <Template>
                    @((context as Vessel)?.System.Name)
                </Template>
                </RadzenDropDownDataGridColumn>
        </Columns>
        <ValueTemplate>
            <b>שם הכלי:</b> @((context as Vessel)?.Name)
        </ValueTemplate>
    </RadzenDropDownDataGrid>
</CipherFormRow>

@code {
    /// <summary>
    /// Is the drop down disabled.
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; } = false;

    /// <summary>
    /// All vessels available
    /// </summary>
    [Parameter]
    public Vessel? ChosenVessel { get; set; }

    /// <summary>
    /// All vessels available
    /// </summary>
    [Parameter]
    public List<Vessel> AllVessels { get; set; } = new List<Vessel>();

    /// <summary>
    /// Error response for fetching data
    /// </summary>
    [Parameter]
    public ErrorResponse Error { get; set; } = ErrorResponse.Success;

    /// <summary>
    /// Change-value event
    /// </summary>
    [Parameter]
    public EventCallback<object> Change { get; set; }

    protected override void OnInitialized()
    {
        Label ??= Vessel.Translate(nameof(Vessel.Name));
        Icon ??= Icons.Cipher.Vessel;
        Width ??= "300px";

        if (AllVessels.Count == 0)
        {
            (AllVessels, Error) = CachedData.AllVessels;
        }
    }
}