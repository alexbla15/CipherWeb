@inherits CipherFormRow

@inject ICipherInfo _db

<CipherFormRow Icon="@Icons.Cipher.Vessel">
    <RadzenDropDownDataGrid TValue=Vessel Data=@vessels TextProperty="@(nameof(CachedData.VesselExample.Id))" ValueProperty="@(nameof(CachedData.VesselExample.Id))"
                            Placeholder="@Label" SearchTextPlaceholder="חיפוש..."
                            AllowColumnResize="true" AllowFilteringByAllStringColumns="true" Style="@($"width: {Width}")" Disabled="@Disabled">
        <Columns>
            <RadzenDropDownDataGridColumn Property="@(nameof(CachedData.VesselExample.Id))" Title="@(Vessel.Translate(nameof(CachedData.VesselExample.Id)))" />
            <RadzenDropDownDataGridColumn Property="@(nameof(CachedData.VesselExample.Name))" Title="@(Vessel.Translate(nameof(CachedData.VesselExample.Name)))" />
            <RadzenDropDownDataGridColumn Property="@(nameof(CachedData.VesselExample.Type))" Title="@(Vessel.Translate(nameof(CachedData.VesselExample.Type)))" />
            <RadzenDropDownDataGridColumn Property="@(nameof(CachedData.VesselExample.System))" Title="@(Vessel.Translate(nameof(CachedData.VesselExample.System)))">
                <Template>
                    @((context as Vessel).System.Id)
                </Template>
                </RadzenDropDownDataGridColumn>
        </Columns>
        <ValueTemplate>
            <b>שם הכלי:</b> @((context as Vessel).Name)
        </ValueTemplate>
    </RadzenDropDownDataGrid>
</CipherFormRow>

@code {
    /// <summary>
    /// Is the drop down disabled.
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; } = false;


    /// <summary>
    /// All vessels available
    /// </summary>
    [Parameter]
    public List<Vessel> vessels { get; set; } = new List<Vessel>();

    /// <summary>
    /// Error response for fetching data
    /// </summary>
    [Parameter]
    public ErrorResponse error { get; set; } = ErrorResponse.Success;

    protected override async Task OnInitializedAsync()
    {
        Label ??= "כלי";
        Icon ??= Icons.Cipher.Vessel;
        Width ??= "300px";

        (vessels, error) = CachedData.AllVessels;
    }
}