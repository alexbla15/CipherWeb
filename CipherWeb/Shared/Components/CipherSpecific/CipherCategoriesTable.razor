@inherits CipherTableCard

<CipherTableCard Title="@Title" Sharable="@Sharable" IsReport="@IsReport">
    <AdditionalButtons>
        <CipherNavButton Icon="@Icons.Symbols.Plus.AddCircleOutline" Path="@CipherNavLinks.AddCategory.Href" HelpText="הוספת קטגוריה" Variant="Variant.Outlined" />
    </AdditionalButtons>
    <ComponentContent>
        <CipherDataGrid Cipher_TItem="Category" DataSource="@categories" WithCustomColumns="true"
                        GridFilterMode="@FilterMode" AllowFilter="@Filter" AllowGroup="@Group">
            <CustomColumns>
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.Id))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.Id)))">
                    <FooterTemplate>
                        <b>@($"כמות: {categories.Count()}")</b>
                    </FooterTemplate>
                    </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.Name))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.Name)))" />
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.Description))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.Description)))" />
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.MaterialType))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.MaterialType)))" >
                    <Template>
                        @context.MaterialType?.Name
                    </Template>    
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.IdMask))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.IdMask)))">
                    <Template>
                        @(string.Join(", ", context.IdMask))
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.CreatingProcesses))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.CreatingProcesses)))">
                    <Template>
                        @(string.Join(", ", context.CreatingProcesses.Select(x => x.Name)))
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.ConsumingProcesses))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.ConsumingProcesses)))">
                    <Template>
                        @(string.Join(", ", context.CreatingProcesses.Select(x => x.Name)))
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.Parent))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.Parent)))">
                    <Template>
                        @context.Parent?.Name
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Category" Property="@(nameof(CachedData.CategoryExample.Children))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.Children)))">
                    <Template>
                        @if (context.Children != null)
                        {
                            @(string.Join(", ", context.Children.Select(x => x.Name)))
                        }
                    </Template>
                </RadzenDataGridColumn>
            </CustomColumns>
        </CipherDataGrid>
    </ComponentContent>
</CipherTableCard>

@code {
    /// <summary>
    /// Filter mode of data grid. Must be a FilterMode-enum.
    /// Defaults to SimpleWithMenu.
    /// </summary>
    [Parameter]
    public FilterMode FilterMode { get; set; } = FilterMode.SimpleWithMenu;

    /// <summary>
    /// Allows/disabled filtering.
    /// </summary>
    [Parameter]
    public bool Filter { get; set; } = false;

    /// <summary>
    /// Allows/disables grouping.
    /// </summary>
    [Parameter]
    public bool Group { get; set; } = false;

    /// <summary>
    /// All available category options
    /// </summary>
    [Parameter]
    public List<Category> categories { get; set; } = new List<Category>();

    /// <summary>
    /// State of rsponse for data fetching in this component
    /// </summary>
    [Parameter]
    public ErrorResponse error { get; set; } = ErrorResponse.Success;

    protected override void OnInitialized()
    {
        Title ??= "סוגים";
        (categories, error) = CachedData.AllCategories;
    }
}