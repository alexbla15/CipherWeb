@inherits CipherFormRow

@inject ICipherInfo _db

<CipherFormRow Icon="@Icon">
    <RadzenDropDownDataGrid Placeholder="@Label" SearchTextPlaceholder="חיפוש..." TValue="Category" Disabled="@Disabled" AllowClear="true"
                            Data=@categories TextProperty="@(nameof(CachedData.CategoryExample.Name))" @bind-Value="Value"
                            AllowColumnResize="true" AllowFilteringByAllStringColumns="true" Style="@($"width: {Width}")"
                            Change="@Change">
        <Columns>
            <RadzenDropDownDataGridColumn Property="@(nameof(CachedData.CategoryExample.Id))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.Id)))" />
            <RadzenDropDownDataGridColumn Property="@(nameof(CachedData.CategoryExample.MaterialType))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.MaterialType)))" >
                <Template>
                    @((context as Category).MaterialType?.Name)
                </Template>
                </RadzenDropDownDataGridColumn>
            <RadzenDropDownDataGridColumn Property="@(nameof(CachedData.CategoryExample.Name))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.Name)))" />
            <RadzenDropDownDataGridColumn Property="@(nameof(CachedData.CategoryExample.IdMask))" Title="@(Category.Translate(nameof(CachedData.CategoryExample.IdMask)))">
                <Template>
                    @(string.Join(", ", (context as Category).IdMask))
                </Template>
            </RadzenDropDownDataGridColumn>
        </Columns>
        <ValueTemplate>
            <b>@Label:</b> @((context as Category).Name)
        </ValueTemplate>
    </RadzenDropDownDataGrid>
</CipherFormRow>

@code {
    /// <summary>
    /// Is the drop down disabled.
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; } = false;

    /// <summary>
    /// All categories optional in the drop down.
    /// </summary>
    [Parameter]
    public List<Category> categories { get; set; } = new List<Category>();

    /// <summary>
    /// Error response for data fetching
    /// </summary>
    [Parameter]
    public ErrorResponse error { get; set; } = ErrorResponse.Success;

    /// <summary>
    /// Chosen category
    /// </summary>
    [Parameter]
    public Category? Value { get; set; }

    /// <summary>
    /// Changed-value event
    /// </summary>
    [Parameter]
    public EventCallback<object> Change { get; set; }

    protected override void OnInitialized()
    {
        Label ??= "קטגוריה";
        Icon ??= Icons.Symbols.Category;
        Width ??= "300px";

        (categories, error) = CachedData.AllCategories;
    }
}