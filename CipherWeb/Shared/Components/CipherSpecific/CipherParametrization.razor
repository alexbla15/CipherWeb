@using CipherWeb.Shared.Components.CipherSpecific;

@inject DialogService DialogService

@inherits CipherComponentCard

@code {
    /// <summary>
    /// Text alignment. Must be a TextAlign-enum.
    /// </summary>
    [Parameter]
    public TextAlign TdTextAlign { get; set; } = TextAlign.Right;

    /// <summary>
    /// Text that will be shown if there are no parameters in memory.
    /// </summary>
    [Parameter]
    public string HelpText { get; set; } = "במסך זה ניתן להוסיף פרמטרים אותם יצטרך להזין המשתמש. להוספה לחצו על כפתור ההוספה למעלה";

    [Parameter]
    public List<ReportParameter> ChosenParameters { get; set; } = new();

    private RadzenDataGrid<ReportParameter> CustomDataGrid = new();

    private List<CipherField> OptionalTypes = CommonFuncs.GetAllCipherFields();
    private ReportParameter old_param = new();

    protected override void OnInitialized()
    {
        Title ??= "פרמטרי משתמש";
    }

    /// <summary>
    /// Add a parameter to the memory.
    /// </summary>
    async Task AddComponent()
    {
        ChosenParameters.Add(new ReportParameter() { Id = ChosenParameters.Count + 1 });
        StateHasChanged();

        await CustomDataGrid.RefreshDataAsync();
    }

    /// <summary>
    /// Deletes a parameter from memory & view.
    /// </summary>
    /// <param name="param"></param>
    /// <returns></returns>
    async Task DeleteRow(ReportParameter param)
    {
        ChosenParameters.Remove(param);

        await CustomDataGrid.RefreshDataAsync();
    }

    /// <summary>
    /// Clears all parameters from memory & view.
    /// </summary>
    /// <returns></returns>
    async Task DeleteAll()
    {
        ChosenParameters = new List<ReportParameter>();
        
        await CustomDataGrid.RefreshDataAsync();
    }
}

<CipherComponentCard Title="@Title">
    <Buttons>
        <CipherAddBtn Variant="Variant.Outlined" Click="@(args => AddComponent())" HelpText="הוספת פרמטר" />
        <CipherButton Icon="@Icons.Documents.Delete.delete_sweep" Variant="Variant.Outlined" Click="@(args => DeleteAll())" HelpText="מחיקת פרמטרים" />
    </Buttons>

    <ChildContent>
        @if (ChosenParameters.Count() == 0)
        {
            <CipherText Text="@HelpText"/>
        }
        <RadzenDataGrid @ref="CustomDataGrid" Data="ChosenParameters" TItem="ReportParameter" AllowColumnResize="true" Visible="ChosenParameters.Count() != 0">
            <Columns>
                <RadzenDataGridColumn Width="10%" TItem="ReportParameter" Title="פעולות" Filterable="false" Sortable="false" TextAlign="@TdTextAlign">
                    <Template Context="param">
                        <CipherDeleteButton Variant=Variant.Outlined Click="@(args => DeleteRow(param))" @onclick:stopPropagation="true" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ReportParameter" Property="Id" Title="#" TextAlign="@TdTextAlign" Width="5%" />
                <RadzenDataGridColumn TItem="ReportParameter" Property="Name" Title="שם" TextAlign="@TdTextAlign" Width="40%">
                    <Template Context="param">
                        <RadzenTextBox @bind-Value="@param.Name" Style="width: 100%" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ReportParameter" Property="pType" Title="סוג" TextAlign="@TdTextAlign" Width="45%">
                    <Template Context="param">
                        <RadzenDropDown @bind-Value=@param.pType Data=@OptionalTypes TextProperty="Translation"
                                                Placeholder="חיפוש פרמטר" AllowClear="true" AllowFiltering="true" Style="width: 100%"/>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </ChildContent>
</CipherComponentCard>