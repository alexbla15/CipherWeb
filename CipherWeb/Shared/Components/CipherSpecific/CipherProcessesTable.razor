@using System.IO

@inherits CipherTableCard

<CipherTableCard Title="@Title" DataSource="@values()" Variant="@Variant" WithCard="@WithCard" WithButtons="@WithButtons" Sharable="@Sharable" IsReport="@IsReport">
    <AdditionalButtons>
        <CipherNavButton Icon="@Icons.Symbols.Plus.add_circle_outline" Path="@CipherNavLinks.AddProcessDefinition.Href" HelpText="הוספת תהליך" Variant="Variant.Outlined" />
    </AdditionalButtons>
    <HeaderContent>
        @if (WithHeaderContent)
        {
            <RadzenStack AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Stretch">
                <CipherLocation Label="בחירת מיקום / תחום / מבנה" />
            </RadzenStack>
        }
    </HeaderContent>
    <ComponentContent>
        <CipherDataGrid Cipher_TItem="Process" DataSource="@ChosenProcesses" WithCustomColumns="true" @ref=datagrid
                        GridFilterMode="@FilterMode" AllowFilter="@AllowFilter" AllowGroup="@AllowGroup">
            <CustomColumns>
                <RadzenDataGridColumn TItem="Process" Property="@(nameof(Process.Id))" Title="@(new Process().Translate(nameof(Process.Id)))">
                    <FooterTemplate>
                        <b>סה"כ תהליכים:</b> @ChosenProcesses.Count()
                    </FooterTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Process" Property="@(nameof(Process.Definition.Name))" Title="@(new ProcessDefinition().Translate(nameof(Process.Definition.Name)))">
                    <Template>
                        @context.Definition.Name
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Process" Property="@(nameof(Process.UncompletedSteps))" Title="@(new Process().Translate(nameof(Process.UncompletedSteps)))">
                    <Template>
                        @(string.Join(", ", context.UncompletedSteps.Select(x => x.Name).ToList()))
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Process" Property="@(nameof(Process.Start))" Title="@(new Process().Translate(nameof(Process.Start)))" />
                <RadzenDataGridColumn TItem="Process" Property="@(nameof(Process.End))" Title="@(new Process().Translate(nameof(Process.End)))" />
            </CustomColumns>
        </CipherDataGrid>
    </ComponentContent>
</CipherTableCard>

@code {
    /// <summary>
    /// Filter mode of the datagrid. Must be a FilterMode-enum.
    /// </summary>
    [Parameter]
    public FilterMode FilterMode { get; set; } = FilterMode.SimpleWithMenu;

    /// <summary>
    /// Is the datagrid filterable.
    /// </summary>
    [Parameter]
    public bool AllowFilter { get; set; } = false;

    /// <summary>
    /// Is the datagrid groupable.
    /// </summary>
    [Parameter]
    public bool AllowGroup { get; set; } = false;

    /// <summary>
    /// Is a CipherAutoComplete header is needed.
    /// </summary>
    [Parameter]
    public bool WithHeaderContent { get; set; } = true;

    /// <summary>
    /// All events for scheduler
    /// </summary>
    [Parameter]
    public IEnumerable<Process> ChosenProcesses { get; set; } = new List<Process>();

    /// <summary>
    /// Error response for fetching data
    /// </summary>
    [Parameter]
    public ErrorResponse error { get; set; } = ErrorResponse.Success;

    private CipherDataGrid<Process> datagrid = new();

    protected override void OnInitialized()
    {
        Title ??= "דוח תהליכים";

        if (ChosenProcesses is null) (ChosenProcesses, error) = CachedData.AllProcesses;
    }

    public IEnumerable<object> values() => datagrid.View;
}