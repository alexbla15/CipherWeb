@inherits CipherTableCard

@inject DialogService DialogService

<CipherTableCard Title="@Title" MaxWidth="@MaxWidth" Width="@Width" DataSource="@packages" WithCard="@WithCard" WithButtons="@WithButtons"
                 Sharable="@Sharable" IsReport="@IsReport"
                 FileTitle="@FileTitle" ExcelExport=@ExcelExport PDFExport=@PDFExport ExpandPath="@ExpandPath" Height="@Height" MarginBottom="@MarginBottom">
    <AdditionalButtons>
        <CipherNavButton Icon="@Icons.Symbols.Plus.AddCircleOutline" Path="@CipherNavLinks.AddPackage.Href" HelpText="הוספת תעודה" Variant="Variant.Outlined" />
    </AdditionalButtons>
    <HeaderContent>
        @if (WithHeaderContent)
        {
            <RadzenStack AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Stretch">
                <CipherLocation WithIcon=false Label="בחירת מיקום / תחום / מבנה" Change="SearchFunc" />
            </RadzenStack>
        }
    </HeaderContent>
    <ComponentContent>
        <CipherDataGrid Cipher_TItem="Package" DataSource="@packages" RowsPerPage="@RowsPerPage"
                        GridFilterMode="@GridFilterMode" AllowFilter="@AllowFilter" AllowGroup="@AllowGroup"
                        WithTotalFooter="@AllowTotalFooter" />
    </ComponentContent>
</CipherTableCard>

@code {
    /// <summary>
    /// Error result of events fetching.
    /// </summary>
    [Parameter]
    public ErrorResponse error { get; set; } = ErrorResponse.Success;

    /// <summary>
    /// Filter mode of data grid. Must be a FilterMode-enum.
    /// </summary>
    [Parameter]
    public FilterMode GridFilterMode { get; set; } = FilterMode.SimpleWithMenu;

    /// <summary>
    /// Is datagrid filterable
    /// </summary>
    [Parameter]
    public bool AllowFilter { get; set; }

    /// <summary>
    /// Is datagrid groupable.
    /// </summary>
    [Parameter]
    public bool AllowGroup { get; set; }

    /// <summary>
    /// Is total footer of decimal values (such as sum of mass) allowed.
    /// </summary>
    [Parameter]
    public bool AllowTotalFooter { get; set; } = true;

    /// <summary>
    /// Is a CipherAutoComplete header is needed.
    /// </summary>
    [Parameter]
    public bool WithHeaderContent { get; set; } = true;

    /// <summary>
    /// Max amount of rows per page of datagrid.
    /// </summary>
    [Parameter]
    public int RowsPerPage { get; set; } = 12;

    /// <summary>
    /// System name for data fetching events
    /// </summary>
    [Parameter]
    public string SelectedSystem { get; set; } = "S1";

    private List<Package> packages = new List<Package>();

    protected override async Task OnInitializedAsync()
    {
        Title ??= "דוח תעודות";
        FileTitle ??= "packages";

        SearchFunc();
    }

    /// <summary>
    /// Function taking place upon clicking Enter.s
    /// </summary>
    private void SearchFunc()
    {
        List<Package>? result = StorageSystem.Packages(SelectedSystem).Item1;
        packages = (result is null) ? new List<Package>() : result;
    }

    async Task ShowError()
    {
        await DialogService.OpenAsync("שגיאת מערכת",
    ds =>
    @<CipherErrorCard ErrorType="@error.Message" ErroredAction="@SelectedSystem" Visible=@(error != ErrorResponse.Success) MarginTop="10px" MarginBottom="10px" />
        , new DialogOptions() { Width = "800px", Height = "250px", Resizable = true, Draggable = true });
    }
}