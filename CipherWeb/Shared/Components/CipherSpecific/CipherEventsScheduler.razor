@inherits CipherComponentCard

@inject ICipherInfo _db

<CipherComponentCard Title="גאנט תהליכים" MaxWidth="@MaxWidth" Width="@Width" MarginBottom="@MarginBottom">
    <HeaderContent>
        <RadzenStack AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
            <CipherAutoComplete Label="בחירת מיקום / תחום / מבנה"></CipherAutoComplete>
        </RadzenStack>
    </HeaderContent>
    <Buttons>
        <CipherButton Icon="@Icons.UiComponents.Table.TableView" HelpText="@TableViewText" Size="ButtonSize.Medium"
                      Variant="Variant.Outlined" ColorShade="Shade.Darker" Click="@TableView" />
        <CipherButton Icon="@Icons.Time.CalendarToday" HelpText="@CalendarViewText"
                      Size="ButtonSize.Medium" Variant="Variant.Outlined"
                      Click="@CalendarView" />
        <CipherExcelButton FileName="@FileName" Data="@events" />
        <CipherPDFButton />
    </Buttons>
    <ChildContent>
        @if (SetView == View.Table)
        {
            <CipherEventsTable Title="" AllowFilter="false" AllowGroup="false" WithCard="false" WithButtons="false" />
        }
        else
        {
            <CipherScheduler Height="@EventsHeight" />
        }
    </ChildContent>
</CipherComponentCard>

@code {
    /// <summary>
    /// Display role of Cipher. Must be a Role-enum.
    /// </summary>
    [Parameter]
    public Role SetRole { get; set; } = Role.Manager;
    
    /// <summary>
    /// initial view of the scheduler (upon entry). Must be a View-enum.
    /// </summary>
    [Parameter]
    public View SetView { get; set; } = View.Calendar;

    /// <summary>
    /// Scheduler events height
    /// </summary>
    [Parameter]
    public string EventsHeight { get; set; } = "600px";

    /// <summary>
    /// View as table - text.
    /// </summary>
    [Parameter]
    public string TableViewText { get; set; } = "הצגה כטבלה";

    /// <summary>
    /// View as table - text.
    /// </summary>
    [Parameter]
    public string CalendarViewText { get; set; } = "הצגה כטבלה";

    /// <summary>
    /// File name for exporting as EXCEL.
    /// </summary>
    [Parameter]
    public string FileName { get; set; } = "events";

    public enum View
    {
        Calendar,
        Table
    }

    public enum Role
    {
        Manager,
        Engineer,
        Admin,
        Authorizer
    }

    private List<Event> events = new List<Event>();

    protected override async Task OnInitializedAsync()
    {
        events = await _db.GetEvents();

        if (SetRole == Role.Manager)
        {
            SetView = View.Calendar;
        }
        else
        {
            SetView = View.Table;
        }
    }

    private void TableView()
    {
        SetView = View.Table;
    }

    private void CalendarView()
    {
        SetView = View.Calendar;
    }
}